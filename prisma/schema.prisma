// This file is used by Prisma
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Player {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  country         String
  gender          String
  password        String
  score           Int?
  createdAt       DateTime         @default(now())
  scores          Score[]
  sentRequests    FriendRequest[]  @relation("SenderRelation")
  receivedRequests FriendRequest[] @relation("ReceiverRelation")
  friendsAsUser1  Friend[]         @relation("User1Relation")
  friendsAsUser2  Friend[]         @relation("User2Relation")
}

model Score {
  id        Int      @id @default(autoincrement())
  value     Int
  timestamp DateTime @default(now())
  player    Player   @relation(fields: [playerId], references: [id])
  playerId  Int
}

model FriendRequest {
  id         Int      @id @default(autoincrement())
  sender     Player   @relation("SenderRelation", fields: [senderId], references: [id])
  senderId   Int
  receiver   Player   @relation("ReceiverRelation", fields: [receiverId], references: [id])
  receiverId Int
  status     String   @default("pending") // pending, accepted, rejected
  createdAt  DateTime @default(now())
  
  @@unique([senderId, receiverId])
}

model Friend {
  id        Int      @id @default(autoincrement())
  user1     Player   @relation("User1Relation", fields: [user1Id], references: [id])
  user1Id   Int
  user2     Player   @relation("User2Relation", fields: [user2Id], references: [id])
  user2Id   Int
  createdAt DateTime @default(now())
  
  @@unique([user1Id, user2Id])
}
